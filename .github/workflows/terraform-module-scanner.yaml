# Description:
# This pipeline will scan multiple frameworks by checkov for security and best practices
# More Information about checkov https://www.checkov.io/7.Scan%20Examples/Terraform.html
name: rwfls-checkov-scan
on:
  workflow_dispatch:
    inputs:
      runner_label:
        description: Distinct or Generic Label for runner selection
        required: true
        type: string
      scan_directory:
        description: Directory where to run scan
        required: true
        type: string
      framework:
        description: Framework Type to scan
        required: true
        type: choice
        options:
          - cloudformation
          - terraform
          - kubernetes
          - all
          - dockerfile
      soft_fail:
        description: Soft Fail on Violations
        required: false
        type: boolean
  workflow_call:
    inputs:
      runner_label:
        description: Distinct or Generic Label for runner selection
        required: true
        type: string
      scan_directory:
        description: Directory where to run scan
        required: true
        type: string
      framework:
        description: Framework Type to scan
        required: true
        type: string
      soft_fail:
        description: Soft Fail on Violations
        required: false
        type: boolean
jobs:

  checkov-job:
    runs-on: [ ubuntu-latest ]
    name: checkov-action
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Run Checkov action
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ${{ inputs.scan_directory }}
          soft_fail: ${{ inputs.soft_fail }}  # optional: do not return an error code if there are failed checks
          framework: ${{ inputs.framework }} # optional: run only on a specific infrastructure {cloudformation,terraform,kubernetes,all}
          output_format: sarif # optional: the output format, one of: cli, json, junitxml, github_failed_only, or sarif. Default: sarif
          download_external_modules: true # optional: download external terraform modules from public git repositories and terraform registry
          log_level: WARNING # optional: set log level. Default WARNING, DEBUG for all output
